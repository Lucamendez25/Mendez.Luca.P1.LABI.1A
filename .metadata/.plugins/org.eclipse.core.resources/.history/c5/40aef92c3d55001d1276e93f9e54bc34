/*
 * output.h
 *
 *  Created on: 25 oct. 2022
 *      Author: Luca
 */

#ifndef OUTPUT_H_
#define OUTPUT_H_


/**
 * @briefes un system("cls"), en el que en verdad no borra, sino que salta varias lineas
 *
 */
void systemCls();

/**
 * @brief es un system("Pause"), en el que debe tocar enter para seguir
 *
 */
void systemPause();


/**
 * @brief Muestra el menu
 *
 * @return opcion
 */
char menu();



/**
 * @brief Muestra submenu para modificar (tipo, vacunado)
 * @return
 */
int subMenuModificar();



/**
 * @brief Muestra todos los tipos que hay cargados con su ID
 * @param vec
 * @param tam
 * @return
 */
int mostrarTipos(eTipo vec[], int tam);



/**
 * @brief Muestra todos los colores que hay cargados con su ID
 * @param vec
 * @param tam
 * @return
 */
int mostrarColores(eColor vec[], int tam);

/**
 * @brief muestra todas las mascotas
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarMascotas(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[] ,int tamMascotas, int tamTipos, int tamColores);


/**
 * @brief Muestra una mascota sola
 * @param mascota
 * @param vecTipos
 * @param vecColores
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarMascota(eMascota mascota, eTipo vecTipos[],eColor vecColores[] , int tamTipos, int tamColores );



/**
 * @brief muestra los servicios disponibles
 * @param vec
 * @param tam
 * @return
 */
int mostrarServicios(eServicio vec[], int tam);


/**
 * @brief  muestra un trabajo
 * @param vecMascota
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @param trabajo
 * @param tamTrabajo
 * @param vecServicios
 * @param tamServicios
 * @return
 */
int mostrarTrabajo(eMascota vecMascota[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores, eTrabajo trabajo, int tamTrabajo, eServicio vecServicios[], int tamServicios);
/**
 * @brief muestra todos los trabajos
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @param vecTrabajos
 * @param tamTrabajos
 * @param vecServicios
 * @param tamServicios
 * @return
 */
int mostrarTrabajos(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[] ,int tamMascotas, int tamTipos, int tamColores, eTrabajo vecTrabajos[], int tamTrabajos, eServicio vecServicios[], int tamServicios);


/**
 * @brief Le pide al usuario el Id del color que desea que se muestren las mascotas
 *
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int subMenuListarMascotasPorColor(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);


/**
 * @brief Muestra las mascotas del color seleccionado (pasado por ID)
 *
 * @param idOpcion
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarMascotaPorColor(int idOpcion, eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);

/**
 * @brief llama a la funcion mostrar todos los animales, despues muestra las que estan vacunadas, y realiza el porcentaje de cuantos animales hay vacunadoss
 *
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int promedioMascotasVacunadas(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);


/**
 * @brief Muestra la o las mascotas con menor edad
 *
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarMascotasConMenorEdad(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);

/**
 * @brief muestra todas las mascotas, pero separado por tipo
 *
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarMascotasPorTipoSeparados(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);


/**
 * @brief muestra el o los colores con mas animales, y despues lista los que tengan ese color sin importar el tipo
 *
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarColoresMasAnimales(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);

/**
 * @brief Le pide al usuario un color y un tipo, y despues lista los animales que haya de ese color y ese tipo
 *
 * @param vecMascotas
 * @param vecTipos
 * @param vecColores
 * @param tamMascotas
 * @param tamTipos
 * @param tamColores
 * @return
 */
int mostrarMascotaColorYTipo(eMascota vecMascotas[], eTipo vecTipos[],eColor vecColores[],int tamMascotas, int tamTipos, int tamColores);



#endif /* OUTPUT_H_ */
